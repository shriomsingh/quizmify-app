// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum GameType{
  topic_based 
  link_based  
}

 
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])

  @@index([userId], name: "userId")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  
  @@index([userId], name: "userId")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image    String?
  accounts Account[]
  sessions Session[]
  games     Game[]
}

model Game{
  id              String  @id @default(cuid())
  userId          String
  questions       Question[]
  timeStarted     DateTime
  topic           String
  gameType        GameType
  timeEnded       DateTime?
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Question{
  id        String @id @default(cuid())
  question  String
  answer    String
  gameId    String
  options   Json? //used for MCQ's
  percentageCorrect  Float? //Used for link_based questions
  isCorrect     Boolean?  // user for MCQ's
  questionType  GameType  
  userAnswer    String?

  game Game @relation(fields: [gameId], references: [id])

  @@index([gameId], name: "gameId")
}

model topic_count{
  id       String @id @default(cuid())
  topic    String @unique
  count    Int
}